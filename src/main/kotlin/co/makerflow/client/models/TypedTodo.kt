/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package co.makerflow.client.models

import co.makerflow.client.models.CustomTask
import co.makerflow.client.models.CustomTaskTodo
import co.makerflow.client.models.OnboardingTask
import co.makerflow.client.models.PullRequest
import co.makerflow.client.models.PullRequestTodo
import co.makerflow.client.models.PullRequestTodoMeta

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonSubTypes
import com.fasterxml.jackson.annotation.JsonTypeInfo

/**
 * 
 *
 * @param task 
 * @param sourceType The type of source that the todo is from
 * @param type The type of todo
 * @param createdAt Timestamp for when the todo was created
 * @param done Whether the todo has been completed
 * @param step 
 * @param pr 
 * @param meta 
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes(
    JsonSubTypes.Type(value = CustomTaskTodo::class, name = "makerflow"),
    JsonSubTypes.Type(value = OnboardingTask::class, name = "onboarding"),
    JsonSubTypes.Type(value = PullRequestTodo::class, name = "pullrequest")
)

interface TypedTodo {

    @get:JsonProperty("task")
    val task: CustomTask
    /* The type of source that the todo is from */
    @get:JsonProperty("sourceType")
    val sourceType: TypedTodo.SourceType?
    /* The type of todo */
    @get:JsonProperty("type")
    val type: kotlin.String?
    /* Timestamp for when the todo was created */
    @get:JsonProperty("createdAt")
    val createdAt: kotlin.String?
    /* Whether the todo has been completed */
    @get:JsonProperty("done")
    val done: kotlin.Boolean?
    @get:JsonProperty("step")
    val step: TypedTodo.Step?
    @get:JsonProperty("pr")
    val pr: PullRequest?
    @get:JsonProperty("meta")
    val meta: PullRequestTodoMeta?
    /**
     * The type of source that the todo is from
     *
     * Values: slack,github,bitbucket,makerflow
     */
    enum class SourceType(val value: kotlin.String) {
        @JsonProperty(value = "slack") slack("slack"),
        @JsonProperty(value = "github") github("github"),
        @JsonProperty(value = "bitbucket") bitbucket("bitbucket"),
        @JsonProperty(value = "makerflow") makerflow("makerflow");
    }
    /**
     * 
     *
     * Values: chatMinusIntegration,repoMinusIntegration,calendarMinusIntegration,cliMinusDownload,editorMinusIntegration,browserMinusExtension
     */
    enum class Step(val value: kotlin.String) {
        @JsonProperty(value = "chat-integration") chatMinusIntegration("chat-integration"),
        @JsonProperty(value = "repo-integration") repoMinusIntegration("repo-integration"),
        @JsonProperty(value = "calendar-integration") calendarMinusIntegration("calendar-integration"),
        @JsonProperty(value = "cli-download") cliMinusDownload("cli-download"),
        @JsonProperty(value = "editor-integration") editorMinusIntegration("editor-integration"),
        @JsonProperty(value = "browser-extension") browserMinusExtension("browser-extension");
    }
}

