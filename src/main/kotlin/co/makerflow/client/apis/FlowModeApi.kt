/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package co.makerflow.client.apis

import co.makerflow.client.models.FetchOngoingFlowMode200Response
import co.makerflow.client.models.StartFlowMode200Response
import co.makerflow.client.models.StopOngoingFlowMode200Response

import co.makerflow.client.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder
import com.fasterxml.jackson.databind.ObjectMapper

open class FlowModeApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonBlock: ObjectMapper.() -> Unit = ApiClient.JSON_DEFAULT,
) : ApiClient(baseUrl, httpClientEngine, httpClientConfig, jsonBlock) {

    /**
     *
     *
     * @param source To specify source of request (optional)
     * @return FetchOngoingFlowMode200Response
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun fetchOngoingFlowMode(source: kotlin.String?): HttpResponse<FetchOngoingFlowMode200Response> {

        val localVariableAuthNames = listOf<String>("api_token")

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        source?.apply { localVariableQuery["source"] = listOf("$source") }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/flow-mode/ongoing",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

    /**
     *
     *
     * @param source To specify source of request (optional)
     * @param pairing  (optional)
     * @param duration  (optional)
     * @param taskIntegrationType  (optional)
     * @param taskIntegrationId  (optional)
     * @param taskId  (optional)
     * @return StartFlowMode200Response
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun startFlowMode(
        source: kotlin.String?,
        pairing: kotlin.Boolean?,
        duration: kotlin.Int?,
        taskIntegrationType: kotlin.String?,
        taskType: kotlin.String?,
        taskId: kotlin.String?
    ): HttpResponse<StartFlowMode200Response> {

        val localVariableAuthNames = listOf<String>("api_token")

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        source?.apply { localVariableQuery["source"] = listOf("$source") }
        pairing?.apply { localVariableQuery["pairing"] = listOf("$pairing") }
        duration?.apply { localVariableQuery["duration"] = listOf("$duration") }
        taskIntegrationType?.apply { localVariableQuery["taskIntegrationType"] = listOf("$taskIntegrationType") }
        taskType?.apply { localVariableQuery["taskType"] = listOf("$taskType") }
        taskId?.apply { localVariableQuery["taskId"] = listOf("$taskId") }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/flow-mode/start",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

    /**
     *
     *
     * @param source To specify source of request (optional)
     * @return StopOngoingFlowMode200Response
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun stopOngoingFlowMode(source: kotlin.String?): HttpResponse<StopOngoingFlowMode200Response> {

        val localVariableAuthNames = listOf<String>("api_token")

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        source?.apply { localVariableQuery["source"] = listOf("$source") }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/flow-mode/stop",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

}
