/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package co.makerflow.client.models

import co.makerflow.client.models.FlowModeTodo

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * A \"Flow Mode\" instance that has already ended
 *
 * @param id 
 * @param userId 
 * @param start Timestamp for when the flow mode was started
 * @param end Timestamp for when flow mode ended
 * @param pairing Whether the flow mode is a pairing session
 * @param taskIntegrationType The type of task integration that flow mode is being used for
 * @param taskId The ID of the task that flow mode is being used for
 * @param taskType The type of task that flow mode is being used for
 * @param todo 
 * @param startSource The source of the request that started flow mode
 * @param endSource The source of the request that ended flow mode
 * @param scheduledEnd The scheduled end time of the flow mode
 */


data class EndedFlowMode (

    @field:JsonProperty("id")
    val id: kotlin.Int,

    @field:JsonProperty("user_id")
    val userId: kotlin.Int,

    /* Timestamp for when the flow mode was started */
    @field:JsonProperty("start")
    val start: kotlin.String,

    /* Timestamp for when flow mode ended */
    @field:JsonProperty("end")
    val end: kotlin.String?,

    /* Whether the flow mode is a pairing session */
    @field:JsonProperty("pairing")
    val pairing: kotlin.Boolean? = null,

    /* The type of task integration that flow mode is being used for */
    @field:JsonProperty("task_integration_type")
    val taskIntegrationType: kotlin.String? = null,

    /* The ID of the task that flow mode is being used for */
    @field:JsonProperty("task_id")
    val taskId: kotlin.Int? = null,

    /* The type of task that flow mode is being used for */
    @field:JsonProperty("task_type")
    val taskType: kotlin.String? = null,

    @field:JsonProperty("todo")
    val todo: FlowModeTodo? = null,

    /* The source of the request that started flow mode */
    @field:JsonProperty("start_source")
    val startSource: kotlin.String? = null,

    /* The source of the request that ended flow mode */
    @field:JsonProperty("end_source")
    val endSource: kotlin.String? = null,

    /* The scheduled end time of the flow mode */
    @field:JsonProperty("scheduled_end")
    val scheduledEnd: kotlin.String? = null

)

